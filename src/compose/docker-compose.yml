version: '3.4'

services:
  kong.api.orders:
    image: ${DOCKER_REGISTRY-}kong.api.orders
    container_name: kong.api.orders
    build:
      context: .
      dockerfile: ../microservices/DDona.KongPoC.OrdersAPI/Dockerfile
    ports:
      - "6001:443"
    networks:
      - kong_net

  kong.api.products:
    image: ${DOCKER_REGISTRY-}kong.api.products
    container_name: kong.api.products
    build:
      context: .
      dockerfile: ../microservices/DDona.KongPoC.ProductsAPI/Dockerfile
    ports:
      - "5001:443"
    networks:
      - kong_net

  kong.database:
    image: postgres:9.6
    container_name: kong.database
    environment:
      POSTGRES_USER: db_user
      POSTGRES_PASSWORD: db_password
      POSTGRES_DB: kongDB
    ports:
      - 5432:5432
    volumes:
      - postgres_volume:/var/lib/postgresql/data
    networks:
      - kong_net

  kong.migrations:
    image: kong:latest
    container_name: kong.migrations
    command: "kong migrations bootstrap -v"
    environment:
      KONG_DATABASE: postgres
      KONG_PG_HOST: kong.database
      KONG_PG_DATABASE: kongDB
      KONG_PG_USER: db_user
      KONG_PG_PASSWORD: db_password
    depends_on:
      - kong.database
    networks:
      - kong_net
    restart: on-failure

  kong:
    image: kong:latest
    container_name: kong
    environment:
      KONG_DATABASE: postgres
      KONG_PG_HOST: kong.database
      KONG_PG_DATABASE: kongDB
      KONG_PG_USER: db_user
      KONG_PG_PASSWORD: db_password
      KONG_PROXY_ACCESS_LOG: /dev/stdout
      KONG_ADMIN_ACCESS_LOG: /dev/stdout
      KONG_PROXY_ERROR_LOG: /dev/stderr
      KONG_ADMIN_ERROR_LOG: /dev/stderr
      KONG_ADMIN_LISTEN: 0.0.0.0:8001, 0.0.0.0:8444 ssl
    restart: on-failure
    ports:
      - 8000:8000
      - 8443:8443
      - 8001:8001
      - 8444:8444
    depends_on:
      - kong.migrations
      - kong.api.products
      - kong.api.orders
    networks:
      - kong_net

  konga:
    image: pantsel/konga
    container_name: konga
    environment:
      DB_ADAPTER: postgres
      DB_HOST: kong.database
      DB_PORT: 5432
      DB_DATABASE: kongDB
      DB_USER: db_user
      DB_PASSWORD: db_password
      NODE_ENV: development
      KONGA_HOOK_TIMEOUT: 10000
    restart: on-failure
    ports:
      - 1337:1337
    depends_on:
      - kong.database
      - kong
      - kong.api.products
      - kong.api.orders
    networks:
      - kong_net

volumes:
  postgres_volume:
    name: postgres.volume

networks:
  kong_net: